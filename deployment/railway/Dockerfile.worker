ARG PYTHON_VERSION=3.12.7-alpine

# BASE-IMAGE - get base python image with poetry
FROM python:${PYTHON_VERSION} as base-image

RUN \
    apk update && \
    apk upgrade && \
    python3 -m pip install --upgrade pip && \
    pip install poetry

# COMPILE-IMAGE - install backend dependencies, setup virtual environment
FROM base-image as compile-image

ENV PYTHONUNBUFFERED 1

WORKDIR /app/backend

COPY backend/pyproject.toml backend/poetry.lock /app/backend/

RUN \
    apk update && \
    apk upgrade && \
    apk add --virtual .build-deps gcc musl-dev postgresql-dev && \
    mkdir .venv && \
    poetry install --verbose && \
    apk --purge del .build-deps

# RUNTIME - copy environment, install packages required at runtime
FROM base-image as runtime

ENV PATH="/app/backend/.venv/bin:$PATH"

COPY --from=compile-image /app/backend/.venv /app/backend/.venv
COPY backend /app/backend/

RUN \
    apk add bash postgresql-libs gettext && \
    rm -rf /var/cache/apk/*

WORKDIR /app/backend
