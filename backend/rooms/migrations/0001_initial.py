# Generated by Django 3.2.5 on 2021-07-13 11:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('beers', '0003_auto_20210713_1250'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BeerInRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beers.beer')),
            ],
            options={
                'verbose_name_plural': 'Beers in Room',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8, unique=True)),
                ('password', models.CharField(blank=True, max_length=20, null=True)),
                ('slots', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('state', models.CharField(choices=[('WAITING', 'WAITING'), ('STARTING', 'STARTING'), ('IN_PROGRESS', 'IN_PROGRESS'), ('FINISHED', 'FINISHED')], default='WAITING', max_length=11)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('beers', models.ManyToManyField(through='rooms.BeerInRoom', to='beers.Beer')),
                ('host', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='host', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rooms.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Users in Room',
            },
        ),
        migrations.AddField(
            model_name='room',
            name='users',
            field=models.ManyToManyField(through='rooms.UserInRoom', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.TextField(blank=True, max_length=300, null=True)),
                ('foam', models.TextField(blank=True, max_length=300, null=True)),
                ('smell', models.TextField(blank=True, max_length=300, null=True)),
                ('taste', models.TextField(blank=True, max_length=300, null=True)),
                ('opinion', models.TextField(blank=True, max_length=300, null=True)),
                ('note', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='beerinroom',
            name='ratings',
            field=models.ManyToManyField(to='rooms.Rating'),
        ),
        migrations.AddField(
            model_name='beerinroom',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rooms.room'),
        ),
    ]
