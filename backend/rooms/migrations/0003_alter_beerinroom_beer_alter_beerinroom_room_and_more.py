# Generated by Django 4.2.3 on 2023-07-12 20:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('beers', '0002_alter_beer_brewery_alter_beer_hops_alter_beer_style_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('rooms', '0002_add_related_fields'),
    ]

    operations = [
        migrations.AlterField(
            model_name='beerinroom',
            name='beer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms_through', to='beers.beer'),
        ),
        migrations.AlterField(
            model_name='beerinroom',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beers_through', to='rooms.room'),
        ),
        migrations.AlterField(
            model_name='room',
            name='beers',
            field=models.ManyToManyField(blank=True, help_text='Beers to be reviewed in the room', related_name='rooms', through='rooms.BeerInRoom', to='beers.beer'),
        ),
        migrations.AlterField(
            model_name='room',
            name='name',
            field=models.CharField(help_text='Unique room name', max_length=8, unique=True),
        ),
        migrations.AlterField(
            model_name='room',
            name='password',
            field=models.CharField(blank=True, help_text='Password needed to join the room. Leave blank if you want the room to be public.', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='room',
            name='slots',
            field=models.PositiveIntegerField(default=1, help_text='Maximum number of participants in the room (including host)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AlterField(
            model_name='room',
            name='users',
            field=models.ManyToManyField(blank=True, help_text='Users currently present in the room', related_name='rooms_joined', through='rooms.UserInRoom', to=settings.AUTH_USER_MODEL),
        ),
    ]
